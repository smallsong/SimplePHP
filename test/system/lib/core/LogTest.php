<?php

namespace lib\core;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-07-30 at 23:04:39.
 */
class LogTest extends \PHPUnit_Framework_TestCase {
	
	/**
	 * @var Log
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 * @covers lib\core\Log::__construct
	 */
	protected function setUp() {
        $stub = $this->getMockBuilder('lib\\core\\Application')
                     ->disableOriginalConstructor()
                     ->getMock();
        $stub->expects($this->once())
             ->method('getConfig')
             ->will($this->returnValue(new Config()));
		$this->object = new Log($stub);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 * @covers lib\core\Log::__destruct
	 */
	protected function tearDown() {
		$this->object = NULL;
	}

	/**
	 * @covers lib\core\Log::phpErrorHander
	 */
	public function testPhpErrorHander() {
		ob_start();
		$this->object->phpErrorHander(0, 'for test', __FILE__, 1);
		ob_clean();
	}

	/**
	 * @covers lib\core\Log::unhandledExceptionHandler
	 */
	public function testUnhandledExceptionHandler() {
		ob_start();
		$this->object->unhandledExceptionHandler(new \Exception('For Test'));
		ob_clean();
	}

	/**
	 * @covers lib\core\Log::record
	 */
	public function testRecord() {
		$this->object->record(Log::DEBUG, 'For test');
		$this->object->record('DEBUG', 'For test');
		$this->object->record('NONE', 'For test');
	}

	/**
	 * @covers lib\core\Log::debug
	 */
	public function testDebug() {
		$this->object->debug('For test');
	}

	/**
	 * @covers lib\core\Log::info
	 */
	public function testInfo() {
		$this->object->info('For test');
	}

	/**
	 * @covers lib\core\Log::warn
	 */
	public function testWarn() {
		$this->object->warn('For test');
	}

	/**
	 * @covers lib\core\Log::error
	 */
	public function testError() {
		$this->object->error('For test');
	}

}
