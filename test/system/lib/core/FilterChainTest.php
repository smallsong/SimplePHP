<?php

namespace lib\core {

	/**
	 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-08-03 at 12:51:57.
	 */
	class FilterChainTest extends \PHPUnit_Framework_TestCase {

		/**
		 * @var FilterChain
		 */
		protected $object;

		/**
		 * @var Application
		 */
		protected $appContext;

		/**
		 * Sets up the fixture, for example, opens a network connection.
		 * This method is called before a test is executed.
		 * @covers lib\core\FilterChain::__construct
		 * @covers lib\core\FilterChain::initFilterChain
		 */
		protected function setUp() {
			$_GET['p'] = '/DummyHome';
			$_SERVER['PHP_INFO'] = '/DummyHome';
			$_SERVER['REQUEST_URI'] = '/DummyHome';
			$this->appContext = Application::getInstance(TRUE);
			$this->appContext->run();
			$this->appContext->getConfig()->set('filter', array(
				'#^.*$#i' => array(
					'lib\\core\\DummyFilter',
				),
			));
			$this->object = new FilterChain($this->appContext);
		}

		/**
		 * Test invoking
		 * @covers lib\core\FilterChain::invoke
		 * @covers lib\core\FilterChain::invokeAction
		 */
		public function testInvoke() {
			$this->object->invoke();
			$this->assertTrue(defined('DUMMY_FILTER_RUN'));
			$this->assertTrue(defined('DUMMY_BEFORE_HOME_ACTION_RUN'));
			$this->assertTrue(defined('DUMMY_HOME_ACTION_RUN'));
			$this->assertTrue(defined('DUMMY_AFTER_HOME_ACTION_RUN'));
		}

	}


	/**
	 * Dummy filter class for test
	 */
	class DummyFilter extends Filter {

		public static $isStop = false;

		/**
		 * Do filter
		 * @param FilterChain $filterChain
		 */
		public function doFilter($filterChain) {
			if(self::$isStop) {
				$this->getContext()->getResponse()->stop();
			} else {
				define('DUMMY_FILTER_RUN', TRUE);
				$filterChain->invoke();
			}
		}
	}

}

namespace controller {
	/**
	* Dummy action class for test
	*/
   class DummyHomeAction extends \lib\core\Action {

	   public function beforeExecute() {
			define('DUMMY_BEFORE_HOME_ACTION_RUN', TRUE);
	   }


	   public function execute() {
			define('DUMMY_HOME_ACTION_RUN', TRUE);
	   }

	   public function afterExecute() {
			define('DUMMY_AFTER_HOME_ACTION_RUN', TRUE);
			$this->getResponse()->stop();
	   }

   }
}

/* EOF */